class Solution 
{
public:
    int check(vector<vector<int>> v1)
    {
        if(v1[0][0]==v1[4][0] && v1[8][0]==v1[4][0])
        {
            if(v1[0][0]==1)
                return 1;
            else if(v1[0][0]==2)
                return 2;
        }
        else if(v1[2][0]==v1[4][0] && v1[2][0]==v1[6][0])
        {
            if(v1[2][0]==1)
                return 1;
            else if(v1[2][0]==2)
                return 2;
        }
        for(int i=0;i<v1.size();i=i+3)
        {
            if(v1[i][0]==v1[i+1][0] && v1[i+2][0]==v1[i][0])
                if(v1[i][0]==1)
                    return 1;
                else if(v1[i][0]==2)
                    return 2;
        }
        for(int i=0;i<3;++i)
        {
            if(v1[i][0]==v1[i+3][0] && v1[i+6][0]==v1[i][0])
                if(v1[i][0]==1)
                    return 1;
                else if(v1[i][0]==2)
                    return 2;
        }
        return -1;
    }
    string tictactoe(vector<vector<int>>& moves) 
    {
        vector<vector<int>> matrix(9,vector<int>(1,0));
        for(int i=0;i<moves.size();++i)
        {
            if(i%2==0)
                matrix[moves[i][0]*3+moves[i][1]][0]=1;
            else
                matrix[moves[i][0]*3+moves[i][1]][0]=2;
        }
        int ans=check(matrix);
        return (ans==1)?"A":(ans==2)?"B":(ans==-1 && moves.size()==9)?"Draw":"Pending";
    }
};
